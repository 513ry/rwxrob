#!/bin/bash

declare file=README.md

days () {
  local -A weekdays
  local -A weekends
  local hour day activity last_activity

  while IFS= read -r line; do
    hour=${line%%|*}
    activity=${line#*|}
    weekdays[$hour]="${activity}"
    #echo "$hour $activity"
  done < <(yq e '.Schedule[0].Activities[] | join("|")' data.yml)

  while IFS= read -r line; do
    hour=${line%%|*}
    activity=${line#*|}
    friday[$hour]="${activity}"
    #echo "$hour $activity"
  done < <(yq e '.Schedule[1].Activities[] | join("|")' data.yml)

  while IFS= read -r line; do
    hour=${line%%|*}
    activity=${line#*|}
    weekends[$hour]="${activity}"
    #echo "$hour $activity"
  done < <(yq e '.Schedule[2].Activities[] | join("|")' data.yml)

  for hour in {5..23}; do
    echo -n "$hour|"

    # weekdays
    declare last_weekday_activity
    for day in {1..4}; do
      activity=${weekdays[$hour]}
      if [[ -n "${activity}" ]]; then
        last_weekday_activity="${activity}"
      fi
      echo -n "$last_weekday_activity|"
    done

    # fridays
    declare last_friday_activity
    for day in {4}; do
      activity=${friday[$hour]}
      if [[ -n "${activity}" ]]; then
        last_friday_activity="${activity}"
      fi
      echo -n "$last_friday_activity|"
    done

    # weekends
    declare last_weekend_activity
    for day in 7 0; do 
      activity=${weekends[$hour]}
      if [[ -n "${activity}" ]]; then
        last_weekend_activity="${activity}"
      fi
      echo -n "$last_weekend_activity"
      if [[ $day != 0 ]];then
        echo -n "|"
      fi
    done

    ## FIXME Individual weekday generation instead of clumping

    echo
  done
}

write_headers () {
  echo "⏰|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday"
  echo "-|-|-|-|-|-|-|-"
}

replace_schedule () {
  local file="$1"
  if [[ -z "${file}" ]];then
    return
  fi
  local in_oldsched
  while IFS= read -r line; do

  if [[ $line =~ ^⏰ ]];then
    write_headers
    days
    in_oldsched=true
    continue
  fi

  if [[ -n "${in_oldsched}" && $line == "" ]];then
    in_oldsched=
  fi

  if [[ -n "${in_oldsched}" ]]; then
    continue
  fi

  echo "$line"
  done < "${file}" 
}

new=$(replace_schedule "$file")
echo "$new" > "${file}"
